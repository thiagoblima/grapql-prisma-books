# import UserOrderByInput, PostOrderByInput, CommentOrderByInput from './generated/prisma.graphql'

type Query {
        users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
        greeting(name: String, position: String): String!
        order(item: String, qtd: Int, price: Float!): String!
        add(numbers: [Float!]!): Float!
        grades: [Int!]!
        me: User!
    }

    type Mutation {
        createUser(data: CreateUserInput!): AuthPayload!
        login(data: LoginUserInput!): AuthPayload!
        deleteUser: User!
        updateUser(data: UpdateUserInput!): User!
    }

    type Subscription {
        count: Int!
        user: CreateUserSubscriptionPayload!
    }

    type AuthPayload {
        token: String!
        user: User!
    }

    input CreateUserInput {
        name: String! 
        email: String!
        password: String!
    }

    input LoginUserInput {
        email: String!
        password: String!
    }

    input UpdateUserInput {
        name: String
        email: String
        password: String
    }

    type User {
        id: ID!
        name: String!
        email: String
        createdAt: String!
        updatedAt: String!
    }

    enum MutationType {
        CREATED,
        DELETED,
        UPDATED
    }

      type CreateUserSubscriptionPayload {
        mutation: MutationType!
        node: User!
    }
    